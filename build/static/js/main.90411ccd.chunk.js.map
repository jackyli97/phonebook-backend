{"version":3,"sources":["components/Search.js","components/PersonForm.js","components/PersonInfo.js","components/Notification.js","components/App.js","index.js"],"names":["Search","props","onChange","handleChange","value","newSearch","PersonForm","onSubmit","handleNewPerson","newName","newNumber","type","PersonInfo","numbersToShow","map","person","name","number","onClick","handleDelete","id","Notification","message","className","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","App","useState","persons","setPersons","setNewName","setNewNumber","setNewSearch","setMessage","messageType","setMessageType","useEffect","axios","get","then","response","data","event","target","length","filter","toLowerCase","includes","handleNumberUpdate","find","per","url","changedPerson","put","returnedPerson","setTimeout","concat","catch","error","checkExists","preventDefault","window","confirm","post","delete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90411ccd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Search = (props) => {\n    return (\n      <div>\n        filter shown with{\" \"}\n        <input onChange={props.handleChange(\"search\")} value={props.newSearch} />\n      </div>\n    );\n} \n\nexport default Search;","import React from 'react';\n\nconst PersonForm = (props) => {\n    return(\n        <form onSubmit={props.handleNewPerson}>\n            <div>\n                name: <input onChange={props.handleChange(\"name\")} value={props.newName} />\n            </div>\n            <div>\n                number: <input onChange={props.handleChange(\"number\")} value={props.newNumber} />\n            </div>\n            <div>debug: {props.newName}</div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm;\n","import React from 'react';\n\nconst PersonInfo = (props) => {\n    return (\n      <>\n        {props.numbersToShow.map((person) => {\n          return (\n            <li>\n            {person.name} {person.number} <button onClick={()=>props.handleDelete(person.id, person.name)}>delete</button>\n            </li>\n          );\n        })}\n      </>\n    );\n}\n\nexport default PersonInfo;","const Notification = ({ message, type }) => {\n  if (message === null) {\n    return null;\n  }\n\n  const successStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n\n  const errorStyle = {\n    color: \"red\",\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n\n  return <div className=\"error\" style={type === 'success' ? successStyle : errorStyle}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Search from './Search';\nimport PersonForm from './PersonForm';\nimport PersonInfo from \"./PersonInfo\";\nimport Notification from \"./Notification\";\nconst baseUrl = \"/api/persons\";\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newSearch, setNewSearch] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [messageType, setMessageType] = useState(null);\n\n  useEffect(()=>{\n    axios.get(baseUrl).then((response) => {\n      setPersons(response.data);\n    });\n  },[]);\n\n  const handleDelete = (id, name) => {\n    if (window.confirm(`Delete ${name}`)) {\n      axios\n        .delete(`${baseUrl}/${id}`)\n        .then(() => {\n          setPersons(persons.filter((person) => person.id !== id));\n        })\n        .catch((error) => {\n          setMessage(\n            `Information of ${name} has already been removed from server`\n          );\n          setMessageType(\"error\");\n          setTimeout(() => {\n            setMessage(null);\n            setMessageType(null);\n          }, 5000);\n        });\n    }\n  }\n\n  const handleChange = (type) => {\n    return event => {\n      if (type === \"name\") setNewName(event.target.value);\n      else if (type === \"number\") setNewNumber(event.target.value);\n      else if (type === \"search\") setNewSearch(event.target.value);\n    }\n  }\n\n  const numbersToShow = newSearch.length === 0 ? persons : persons.filter(person=>person.name.toLowerCase().includes(newSearch));\n\n  const handleNewPerson = (event) => {\n    event.preventDefault();\n\n    if (checkExists(newName)){\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        handleNumberUpdate();\n      };\n    }\n    else{\n      const request = axios.post(baseUrl, {\n        name: newName,\n        number: newNumber,\n        id: persons.length + 1,\n      });\n      request.then(response=>response.data)\n      .then((returnedPerson=>{\n        // const newPerson = [\n        //   { name: newName, number: newNumber, id: persons.length + 1 },\n        // ];\n        setMessage(\n        `Added ${newName} `\n        );\n        setMessageType('success');\n        setTimeout(() => {\n          setMessage(null);\n          setMessageType(null);\n        }, 5000);\n        setPersons(persons.concat(returnedPerson));\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }))\n      .catch(error=>{\n        setMessage('Problem adding new person, please try again');\n        setMessageType('error');\n        setTimeout(() => {\n        setMessage(null);\n        setMessageType(null);\n        }, 5000);\n      })\n    }\n  };\n\n  const handleNumberUpdate = () => {\n    const person = persons.find((per) => per.name === newName);\n    const url = `${baseUrl}/${person.id}`;\n    const changedPerson = {...person, number: newNumber};\n\n    const request = axios.put(url, changedPerson);\n    request.then(response=>response.data)\n    .then((returnedPerson) => {\n      setMessage(`Updated ${newName}'s number`);\n      setMessageType(\"success\");\n      setTimeout(() => {\n        setMessage(null);\n        setMessageType(null);\n      }, 5000);\n      setPersons(persons.concat(returnedPerson));\n      setNewName(\"\");\n      setNewNumber(\"\");\n      setPersons(\n        persons.map(per=> per.id !== person.id ? per : returnedPerson)\n      );\n      setNewName(\"\");\n      setNewNumber(\"\");\n    })\n    .catch((error) => {\n        setMessage(`Information of ${newName} has already been removed from server`);\n        setMessageType(\"error\");\n        setTimeout(() => {\n          setMessage(null);\n          setMessageType(null);\n        }, 5000);\n    });\n  }\n\n  const checkExists = (name) => {\n    return persons.filter(person=>person.name === name).length > 0;\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType}/>\n      <Search handleChange={handleChange} newSearch={newSearch}/>\n      <PersonForm handleChange={handleChange} handleNewPerson={handleNewPerson} newName={newName} newNumber={newNumber}/>\n      {/* <form onSubmit={handleNewPerson}>\n        <div>\n          name: <input onChange={handleChange(\"name\")} value={newName} />\n        </div>\n        <div>\n          number: <input onChange={handleChange(\"number\")} value={newNumber} />\n        </div>\n        <div>debug: {newName}</div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form> */}\n      <h2>Numbers</h2>\n      <PersonInfo numbersToShow={numbersToShow} handleDelete={handleDelete}/>\n      {/* {numbersToShow.map((person) => {\n        return (\n          <>\n            <li>\n              {person.name} {person.number}\n            </li>\n          </>\n        );\n      })} */}\n      {/* <h2>Phonebook</h2>\n      <div>\n        filter shown with <input onChange={handleChange(\"search\")} value={newSearch} />\n      </div>\n      <form onSubmit={handleNewPerson}>\n        <div>\n          name: <input onChange={handleChange(\"name\")} value={newName} />\n        </div>\n        <div>\n          number: <input onChange={handleChange(\"number\")} value={newNumber} />\n        </div>\n        <div>debug: {newName}</div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {numbersToShow.map((person) => {\n        return (\n          <>\n            <li>\n              {person.name} {person.number}\n            </li>\n          </>\n        );\n      })} */}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}